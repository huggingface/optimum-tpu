name: Release

on:
  release:

jobs:
  docker:
    name: Push TGI Docker container to Docker Hub and Github Registry
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
        - name: Check out the repo
          uses: actions/checkout@v4

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Log in to the Container registry
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: |
              ghcr.io/${{ github.repository }}
            flavor: |
              latest=auto
              prefix=
              suffix=-tgi

        - name: Get the version
          id: version
          run: |
           VERSION=$(awk '/__version__ = "(.*)"/{print $3}' optimum/tpu/version.py | sed 's/"//g')
           echo "version=$VERSION" >> $GITHUB_OUTPUT

        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@v6
          with:
            context: .
            file: text-generation-inference/docker/Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            build-args: |
              VERSION=${{ steps.version.outputs.version }}
              TGI_VERSION=5bc3d65dd32ba1f979540caeccbf3dd8798dd9df
            target: inference-endpoint


        - name: Generate artifact attestation
          uses: actions/attest-build-provenance@v1
          with:
            subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true
